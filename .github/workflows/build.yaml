name: Build
on:
  push:
    branches:
      - main
      - homolog
  pull_request:
    branches:
      - main
      - homolog
    types: [opened, synchronize, reopened]

jobs:
  setup:
    name: Setup and Cache Dependencies
    runs-on: ubuntu-22.04
    outputs:
      cache-key: ${{ steps.cache-modules.outputs.cache-key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Generate cache key
        id: cache-modules
        run: echo "cache-key=${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ steps.cache-modules.outputs.cache-key }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm i

  commitlint:
    needs: setup
    name: Commitlint job
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Check Commit
        run: npx commitlint --from ${{ github.event.pull_request.base.sha || format('HEAD~{0}', github.event.commits.length) }} --to ${{ github.sha }} --verbose

  format-code:
    needs: commitlint
    name: Format Code with Prettier
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Format Code
        run: npx prettier --write "src/**/*.ts" "test/**/*.ts"

  lint-code:
    needs: format-code
    name: Lint Code with ESLint
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Run ESLint
        run: npx eslint "{src,apps,libs,test}/**/*.ts" --fix --config .eslintrc.cjs

  sonarcloud:
    needs: lint-code
    name: SonarCloud Scan
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Run tests with coverage
        run: npx jest --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
