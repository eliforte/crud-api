name: Build
on:
  push:
    branches:
      - main
      - homolog
  pull_request:
    branches:
      - main
      - homolog
    types: [opened, synchronize, reopened]
jobs:
  commitlint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install required dependencies
        run: |
          apt update
          apt install -y sudo
          sudo apt install -y git curl
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo DEBIAN_FRONTEND=noninteractive apt install -y nodejs
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  format-code:
    name: Format Code with Prettier
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prettify code
        uses: creyD/prettier_action@v4.3
        with:
          prettier_options: --write **/*.{js,md}
          only_changed: True

  lint-code:
    name: Lint Code with ESLint
    runs-on: ubuntu-22.04
    needs: format-code

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint . --ext .ts,.tsx,.js,.jsx

  apply-template:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Obter primeiro commit do PR
        id: get_commit
        run: |
          FIRST_COMMIT=$(git log --format="%s" -n 1 ${{ github.event.pull_request.head.sha }})
          echo "FIRST_COMMIT=$FIRST_COMMIT" >> $GITHUB_ENV

      - name: Selecionar template baseado no prefixo do commit
        id: select_template
        run: |
          if [[ "${{ env.FIRST_COMMIT }}" =~ ^feat ]]; then
            echo "TEMPLATE=feature.md" >> $GITHUB_ENV
          elif [[ "${{ env.FIRST_COMMIT }}" =~ ^fix ]]; then
            echo "TEMPLATE=bugfix.md" >> $GITHUB_ENV
          elif [[ "${{ env.FIRST_COMMIT }}" =~ ^chore ]]; then
            echo "TEMPLATE=chore.md" >> $GITHUB_ENV
          elif [[ "${{ env.FIRST_COMMIT }}" =~ ^refactor ]]; then
            echo "TEMPLATE=refactor.md" >> $GITHUB_ENV
          elif [[ "${{ env.FIRST_COMMIT }}" =~ ^perf ]]; then
            echo "TEMPLATE=perf.md" >> $GITHUB_ENV
          elif [[ "${{ env.FIRST_COMMIT }}" =~ ^perf ]]; then
            echo "TEMPLATE=perf.md" >> $GITHUB_ENV
          elif [[ "${{ env.FIRST_COMMIT }}" =~ ^perf ]]; then
            echo "TEMPLATE=perf.md" >> $GITHUB_ENV
          fi

      - name: Atualizar descrição do PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const templatePath = `.github/PULL_REQUEST_TEMPLATE/${process.env.TEMPLATE}`;
            if (fs.existsSync(templatePath)) {
              const templateContent = fs.readFileSync(templatePath, 'utf8');
              github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: templateContent
              });
            }

  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-22.04
    needs: lint-code

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run test:cov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
